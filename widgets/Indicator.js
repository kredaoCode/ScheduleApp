import { ActivityIndicator, StyleSheet, Text, TouchableOpacity, View } from 'react-native'
import React, { useContext } from 'react'
import { Context } from '../context';
import { MaterialIcons } from '@expo/vector-icons';

// –ü—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –æ—à–∏–±–æ–∫

export default function Indicator() {
    const { isConnected, user, fetchedSchedule, setShowSettings, isLoadSchedule } = useContext(Context);

    function renderIndicator() {
        if (isConnected) {
            if (!isLoadSchedule && fetchedSchedule === null) {

                // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—É—â–µ—Å—Ç–≤–∏–ª–æ –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫
                if (user.id === null) {
                    return (
                        <View style={{ alignItems: 'center' }}>
                            <MaterialIcons name="check" size={64} color={user.main + 'a4'} />
                            <Text style={[styles.text, { color: user.main + 'a4' }]}>
                                –í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É / –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
                            </Text>
                            <TouchableOpacity style={[styles.button, { backgroundColor: user.main + 'a4' }]} onPress={() => {
                                setShowSettings(true);
                            }}>
                                <MaterialIcons name="settings" size={36} color={user.bg} />
                            </TouchableOpacity>
                            <Text style={[styles.text, { color: user.main + 'a4', marginVertical: 10, fontSize: 12, opacity: 0.5 }]}>
                                –°–ø–∞—Å–∏–±–æ —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å!‚ù§Ô∏è
                            </Text>
                        </View>
                    )
                } else {
                    return (
                        <View style={{ alignItems: 'center' }}>
                            <MaterialIcons name="not-interested" size={64} color={user.main + 'a4'} />
                            <Text style={[styles.text, { color: user.main + 'a4' }]}>
                                –ö–∞–∂–µ—Ç—Å—è, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–µ—Ç
                            </Text>
                            <TouchableOpacity style={[styles.button, { backgroundColor: user.main + 'a4' }]} onPress={() => {
                                setShowSettings(true);
                            }}>
                                <MaterialIcons name="settings" size={36} color={user.bg} />
                            </TouchableOpacity>
                        </View>
                    )
                }
            } else {
                return (
                    // –∫—Ä—É—Ç–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
                    <ActivityIndicator style={{ marginTop: 10 }} size={'large'} color={user.main} />
                );
            }
        } else {
            return (
                // –í —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –Ω–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É
                <Text style={{ color: user.main, fontFamily: 'Raleway-Medium', fontSize: 18, textAlign: 'center' }}>–ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è üò¥</Text>
            );
        }
    }

    return (
        <View style={{ justifyContent: 'center', height: '100%' }}>
            {renderIndicator()}
        </View>
    );
}

const styles = StyleSheet.create({
    button: {
        width: '90%',
        alignItems: "center",
        borderRadius: 10,
        elevation: 5,
        padding: 6
    },
    text: {
        fontFamily: 'Raleway-Regular',
        fontSize: 18,
        marginVertical: 32,
        textAlign: 'center'
    }
})